// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PiaCanina2.Models.dbModels;

namespace PiaCanina2.Migrations
{
    [DbContext(typeof(CaninaContext))]
    partial class CaninaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Perro", b =>
                {
                    b.Property<int>("Idperro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPerro")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("image");

                    b.Property<int?>("Idusuario")
                        .HasColumnType("int")
                        .HasColumnName("idusuario");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Raza")
                        .HasColumnType("int");

                    b.Property<bool>("Sexo")
                        .HasColumnType("bit");

                    b.Property<int>("Tamaño")
                        .HasColumnType("int");

                    b.HasKey("Idperro");

                    b.HasIndex("Idusuario");

                    b.HasIndex("Raza");

                    b.HasIndex("Tamaño");

                    b.ToTable("Perros");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.PerroVacuna", b =>
                {
                    b.Property<int>("Idperro")
                        .HasColumnType("int")
                        .HasColumnName("IDPerro");

                    b.Property<int>("Idvacuna")
                        .HasColumnType("int")
                        .HasColumnName("IDVacuna");

                    b.HasKey("Idperro", "Idvacuna");

                    b.HasIndex("Idvacuna");

                    b.ToTable("PerroVacuna");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Raza", b =>
                {
                    b.Property<int>("Idraza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDRaza")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreRaza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idraza");

                    b.ToTable("Raza");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Tamano", b =>
                {
                    b.Property<int>("IdTamano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTamano");

                    b.ToTable("Tamano");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Vacuna", b =>
                {
                    b.Property<int>("Idvacuna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDVacuna")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreVacuna")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.HasKey("Idvacuna");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Vcliente", b =>
                {
                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("image");

                    b.Property<int>("Idperro")
                        .HasColumnType("int")
                        .HasColumnName("IDPerro");

                    b.Property<int?>("Idusuario")
                        .HasColumnType("int")
                        .HasColumnName("idusuario");

                    b.Property<string>("NombreRaza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Raza")
                        .HasColumnType("int");

                    b.Property<bool>("Sexo")
                        .HasColumnType("bit");

                    b.Property<string>("TamanoNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Tamaño")
                        .HasColumnType("int");

                    b.ToView("VCliente");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.VhistorialMedico", b =>
                {
                    b.Property<int>("Idperro")
                        .HasColumnType("int")
                        .HasColumnName("IDPerro");

                    b.Property<int>("Idvacuna")
                        .HasColumnType("int")
                        .HasColumnName("IDVacuna");

                    b.Property<string>("NombreVacuna")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.ToView("VHistorial_Medico");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PiaCanina2.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PiaCanina2.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiaCanina2.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PiaCanina2.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Perro", b =>
                {
                    b.HasOne("PiaCanina2.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Perros")
                        .HasForeignKey("Idusuario")
                        .HasConstraintName("FK_Perros_Usuarios");

                    b.HasOne("PiaCanina2.Models.dbModels.Raza", "RazaNavigation")
                        .WithMany("Perros")
                        .HasForeignKey("Raza")
                        .HasConstraintName("FK_Perros_Raza")
                        .IsRequired();

                    b.HasOne("PiaCanina2.Models.dbModels.Tamano", "TamañoNavigation")
                        .WithMany("Perros")
                        .HasForeignKey("Tamaño")
                        .HasConstraintName("FK_Perros_Tamano")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("RazaNavigation");

                    b.Navigation("TamañoNavigation");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.PerroVacuna", b =>
                {
                    b.HasOne("PiaCanina2.Models.dbModels.Perro", "IdperroNavigation")
                        .WithMany("PerroVacunas")
                        .HasForeignKey("Idperro")
                        .HasConstraintName("FK_PerroVacuna_Perros")
                        .IsRequired();

                    b.HasOne("PiaCanina2.Models.dbModels.Vacuna", "IdvacunaNavigation")
                        .WithMany("PerroVacunas")
                        .HasForeignKey("Idvacuna")
                        .HasConstraintName("FK_PerroVacuna_Vacunas")
                        .IsRequired();

                    b.Navigation("IdperroNavigation");

                    b.Navigation("IdvacunaNavigation");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Perros");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Perro", b =>
                {
                    b.Navigation("PerroVacunas");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Raza", b =>
                {
                    b.Navigation("Perros");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Tamano", b =>
                {
                    b.Navigation("Perros");
                });

            modelBuilder.Entity("PiaCanina2.Models.dbModels.Vacuna", b =>
                {
                    b.Navigation("PerroVacunas");
                });
#pragma warning restore 612, 618
        }
    }
}
